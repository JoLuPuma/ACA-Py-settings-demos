version: '3'
volumes:
  acapy-vol-wallet:
services:
  #*************************************************************
  # acapy-DB*
  #*************************************************************  
  db:
    image: postgres:15
    # restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_ADMIN_PASSWORD:-development}
      POSTGRES_USER: ${POSTGRESQL_USER:-postgres}
    #ports: # Uncomment to access postgres outside of containers
    #  - "5433:5432"
    networks:
      - acapy_default
    volumes:
      - acapy-vol-wallet:/var/lib/pgsql/data:z
    healthcheck:
      test: pg_isready -U postgres
      interval: 3s
      timeout: 3s
      retries: 5
  #*************************************************************
  # acapy-provision*
  #*************************************************************
  init-acapy-agent:
    image: init-acapy-agent
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRESQL_HOST=${POSTGRESQL_HOST:-db}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT:-5432}
      - ACAPY_WALLET_NAME=${WALLET_NAME:-AgentDBName}
      - ACAPY_WALLET_TYPE=${WALLET_TYPE:-askar-anoncreds}
      - ACAPY_WALLET_STORAGE_TYPE=${WALLET_STORAGE_TYPE:-postgres_storage} 
      - ACAPY_WALLET_STORAGE_CONFIG={"url":"${POSTGRESQL_HOST:-db}:${POSTGRESQL_PORT:-5432}","wallet_scheme":"DatabasePerWallet"}
      - ACAPY_GENESIS_URL=${GENESIS_URL:-http://your-genesis-file}
      - ACAPY_ENDPOINT=${AGENT_ENDPOINT:-http://host.docker.internal:3003}
      - ACAPY_TAILS_SERVER_BASE_URL=http://yout-file-tails-server
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    #ports:
    #  - "3003:3003"
    #  - "3004:3004"
    depends_on:
      db:
        condition: service_healthy 
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 5; \ 
         aca-py provision \
         --arg-file './configs/provision.yml' \ 
         --log-level DEBUG"
      ]
    
    networks:
      - acapy_default
  
  ##*************************************************************
  # acapy-start*
  #*************************************************************
  acapy-agent:
    image: acapy-agent
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ACAPY_LABEL='Émetteur-Accréditeur'
      - POSTGRESQL_HOST=${POSTGRESQL_HOST:-db}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT:-5432}
      - ACAPY_WALLET_NAME=${WALLET_NAME:-AgentDBName}
      - ACAPY_WALLET_TYPE=${WALLET_TYPE:-askar-anoncreds}
      - ACAPY_WALLET_STORAGE_TYPE=${WALLET_STORAGE_TYPE:-postgres_storage} 
      - ACAPY_WALLET_STORAGE_CONFIG={"url":"${POSTGRESQL_HOST:-db}:${POSTGRESQL_PORT:-5432}","wallet_scheme":"DatabasePerWallet"}
      - ACAPY_GENESIS_URL=${GENESIS_URL:-http://test.bcovrin.vonx.io/genesis}
      - ACAPY_INBOUND_TRANSPORT=[["http", "0.0.0.0", "3003"]]
      - ACAPY_OUTBOUND_TRANSPORT=["http"]
      - ACAPY_ENDPOINT=${AGENT_ENDPOINT:-http://host.docker.internal:3003}
      - ACAPY_TAILS_SERVER_BASE_URL=https://tails-test.vonx.io
      - ACAPY_ADMIN=[0.0.0.0, 3004]
      - ACAPY_EMIT_NEW_DIDCOMM_PREFIX=true
      - ACAPY_EMIT_NEW_DIDCOMM_MIME_TYPE=true
      - ACAPY_PRESERVE_EXCHANGE_RECORDS=false
      - ACAPY_ENABLE_UNDELIVERED_QUEUE=true
      - ACAPY_AUTO_PING_CONNECTION=true
      - ACAPY_AUTO_ACCEPT_INVITES=true
      - ACAPY_AUTO_ACCEPT_REQUESTS=true
      - ACAPY_AUTO_RESPOND_MESSAGES=true
      - ACAPY_PUBLIC_INVITES=true
      #- ACAPY_AUTO_RESPOND_CREDENTIAL_PROPOSAL='true'
      #- ACAPY_AUTO_RESPOND_CREDENTIAL_OFFER='true'
      #- ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST='true'
      #- ACAPY_AUTO_RESPOND_PRESENTATION_PROPOSAL='true'
      #- ACAPY_AUTO_RESPOND_PRESENTATION_REQUEST='true'
      #- ACAPY_AUTO_STORE_CREDENTIAL='true'
      #- ACAPY_AUTO_VERIFY_PRESENTATION='true'
      - ACAPY_AUTO_ENDORSE_TRANSACTIONS=true
      - ACAPY_ENDORSER_ROLE=endorser
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "3003:3003"
      - "3004:3004"
    depends_on:
      init-acapy-agent:
        condition: service_completed_successfully 
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 5; \ 
         aca-py start \
         --arg-file './configs/start.yml'"
      ]
    
    networks:
      - acapy_default
  
networks:
    acapy_default:
      #external: true
      name: ${NETWORK_NAME}
